<?php
namespace common\components;

use yii\base\Component;
use yii\httpclient\Client;

class Telegram extends Component
{
    public $botToken;
    public $chatId;

    /**
     * Sends a message to the specified Telegram chat.
     *
     * @param string $text The message text to send.
     * @return array|bool The response from the Telegram API or false on failure.
     *
     * Yii::$app->telegram->sendMessage("‚ö†Ô∏è –ù–æ–≤–∏–π –∑–≤—ñ—Ç –Ω–∞–¥—Å–∏–ª–∞—î—Ç—å—Å—è –æ–∫—Ä–µ–º–æ —Ñ–∞–π–ª–æ–º...");
     *
     * | –¢–µ–≥                                | –û–ø–∏—Å                                       |
     * | ---------------------------------- | ------------------------------------------ |
     * | `<b>`                              | –ñ–∏—Ä–Ω–∏–π —Ç–µ–∫—Å—Ç                               |
     * | `<strong>`                         | –¢–µ —Å–∞–º–µ, —â–æ `<b>`                          |
     * | `<i>`                              | –ö—É—Ä—Å–∏–≤                                     |
     * | `<em>`                             | –¢–µ —Å–∞–º–µ, —â–æ `<i>`                          |
     * | `<u>`                              | –ü—ñ–¥–∫—Ä–µ—Å–ª–µ–Ω–∏–π —Ç–µ–∫—Å—Ç                         |
     * | `<s>`                              | –ó–∞–∫—Ä–µ—Å–ª–µ–Ω–∏–π —Ç–µ–∫—Å—Ç                          |
     * | `<strike>`                         | –¢–µ —Å–∞–º–µ, —â–æ `<s>`                          |
     * | `<del>`                            | –¢–µ —Å–∞–º–µ, —â–æ `<s>`                          |
     * | `<span class="tg-spoiler">`        | –°–ø–æ–π–ª–µ—Ä (—Ç–µ–∫—Å—Ç –±—É–¥–µ –ø—Ä–∏—Ö–æ–≤–∞–Ω–æ)             |
     * | `<a href="URL">`                   | –ì—ñ–ø–µ—Ä–ø–æ—Å–∏–ª–∞–Ω–Ω—è (—Ç—ñ–ª—å–∫–∏ –∑ http/https/tg://) |
     * | `<code>`                           | –ú–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω–∏–π —Ç–µ–∫—Å—Ç (inline)                |
     * | `<pre>`                            | –ë–ª–æ–∫ –º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É                  |
     * | `<pre><code class="language-xxx">` | Syntax highlighting (–ª–∏—à–µ –¥–µ—è–∫—ñ –º–æ–≤–∏)      |
     *
     * ‚ùå –ó–∞–±–æ—Ä–æ–Ω–µ–Ω–æ:
     * <br>, <p>, <div>, <img>, <table>, —ñ–Ω—à—ñ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏.
     *
     * –ù–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è –≤–∫–ª–∞–¥–µ–Ω—ñ—Å—Ç—å (<b><i>text</i></b> = ‚ùå).
 */
    public function sendMessage($text)
    {
        $client = new Client(['baseUrl' => "https://api.telegram.org/bot{$this->botToken}"]);
        $response = $client->createRequest()
            ->setMethod('POST')
            ->setUrl('sendMessage')
            ->setData([
                'chat_id' => $this->chatId,
                'text' => $text,
                'parse_mode' => 'HTML',
            ])
            ->send();

        return $response->isOk ? $response->data : false;
    }

    /**
     * Yii::$app->telegram->sendDocument($filePath, "üìé –î–æ–¥–∞–Ω–æ —Ñ–∞–π–ª –∑ –¥–µ—Ç–∞–ª—è–º–∏");
     * @param $filePath // Path to the file to be sent
     * @param $caption // Caption for the document
     * @return mixed
     */
    public function sendDocument($filePath, $caption = '')
    {
        $url = "https://api.telegram.org/bot{$this->botToken}/sendDocument";

        $postFields = [
            'chat_id' => $this->chatId,
            'caption' => $caption,
            'parse_mode' => 'HTML',
            'document' => new \CURLFile($filePath)
        ];

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_HTTPHEADER, ["Content-Type:multipart/form-data"]);
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $postFields);
        $output = curl_exec($ch);

        curl_close($ch);
        return json_decode($output, true);
    }

}
